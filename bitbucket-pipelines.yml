image: alpine:3.10
pipelines:
  branches:
    master:
    - step:
        name: Deploy-Application
        deployment: production
        script:
        #Declaração de Variáveis
        - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD
        - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD
        - export BUCKET_S3="supertvboxoficial-com-production"
        - export CLOUDFRONT_ID="E17AWVPOF8MZJ8"
        #Execução do Deploy
        - echo "Running Install Packages"
        - apk add py-pip && pip install awscli --upgrade
        - echo "Running Deploy Application"
        - aws s3 sync . s3://$BUCKET_S3 --exclude ".git/*" --exclude ".config" --exclude "bitbucket-pipelines.yml" --delete
        - echo "Running Create Invalidation CloudFront"
        - aws cloudfront create-invalidation --distribution $CLOUDFRONT_ID --paths=/*
    dev:
    - step:
        name: Deploy-Application
        deployment: production
        script:
        #Declaração de Variáveis
        - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV
        - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV
        - export BUCKET_S3="supertvboxoficial-com-stage"
        - export CLOUDFRONT_ID="E1IGTOCJBL9Z8W"
        #Execução do Deploy
        - echo "Running Install Packages"
        - apk add py-pip && pip install awscli --upgrade
        - echo "Running Deploy Application"
        - aws s3 sync . s3://$BUCKET_S3 --exclude ".git/*" --exclude ".config" --exclude "bitbucket-pipelines.yml" --delete
        - echo "Running Create Invalidation CloudFront"
        - aws cloudfront create-invalidation --distribution $CLOUDFRONT_ID --paths=/*
